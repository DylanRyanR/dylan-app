<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.dylan.mapper.DylanLiuliMapper">

    <resultMap type="com.ruoyi.dylan.domain.DylanLiuli" id="DylanLiuliResult">
        <result property="id" column="id"/>
        <result property="liuliLink" column="liuli_link"/>
        <result property="btLink" column="bt_link"/>
        <result property="liuliTitle" column="liuli_title"/>
        <result property="liuliCat" column="liuli_cat"/>
        <result property="publishTime" column="publish_time"/>
        <result property="publishAuthor" column="publish_author"/>
        <result property="subContent" column="sub_content"/>
        <result property="content" column="content"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectDylanLiuliVo">
        SELECT t1.id,
               t1.liuli_link,
               t1.bt_link,
               t1.liuli_title,
               t1.liuli_cat,
               t1.publish_time,
               t1.publish_author,
               t1.sub_content,
               t1.content,
               t1.del_flag,
               t1.create_by,
               t1.create_time,
               t1.update_by,
               t1.update_time
--                GROUP_CONCAT(t2.tag_id ORDER BY t2.tag_id asc) as tag_ids,
--                GROUP_CONCAT(t3.name ORDER BY t2.tag_id asc)   as tag_name
        FROM (SELECT id,
                     liuli_link,
                     bt_link,
                     liuli_title,
                     liuli_cat,
                     publish_time,
                     publish_author,
                     sub_content,
                     content,
                     del_flag,
                     create_by,
                     create_time,
                     update_by,
                     update_time
              FROM dylan_liuli) t1
    </sql>

    <sql id="selectDylanLiuliInfoVo">
        SELECT id,
               liuli_link,
               bt_link,
               liuli_title,
               liuli_cat,
               publish_time,
               publish_author,
               sub_content,
               content,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time
        from dylan_liuli
    </sql>

    <select id="selectDylanLiuliList" parameterType="com.ruoyi.dylan.bo.DylanLiuliBo" resultMap="DylanLiuliResult">
        <include refid="selectDylanLiuliVo"/>
        <if test="liuliTagIdList != null">
            LEFT JOIN (SELECT DISTINCT liuli_id, tag_id FROM dylan_liuli_tag ORDER BY liuli_id, tag_id asc) t2
            ON t1.id = t2.liuli_id
        </if>
        <if test="liuliCatIdList != null">
            LEFT JOIN (SELECT DISTINCT id, NAME FROM dylan_tag WHERE del_flag = 0) t3 ON t2.tag_id = t3.id
        </if>
        <where>
            <if test="liuliLink != null  and liuliLink != ''">and t1.liuli_link like concat("%", #{liuliLink}, "%")</if>
            <if test="btLink != null  and btLink != ''">and t1.bt_link like concat("%", #{btLink}, "%")</if>
            <if test="liuliTitle != null  and liuliTitle != ''">and (t1.liuli_title like concat("%", #{liuliTitle}, "%")
                or t1.sub_content like concat("%", #{liuliTitle}, "%") or t1.content like concat("%", #{liuliTitle},
                "%"))
            </if>
            <if test="content != null  and content != ''">and content like concat("%", #{content}, "%")</if>
            <if test="liuliTagIdList != null">
                and t3.tag_id in
                <foreach collection="liuliTagIdList" item="liuliTagId" open="(" close=")" separator=",">
                    #{liuliTagId}
                </foreach>
            </if>
            <if test="liuliCatIdList != null">
                and t1.liuli_cat in
                <foreach collection="liuliCatIdList" item="liuliCatId" open="(" close=")" separator=",">
                    #{liuliCatId}
                </foreach>
            </if>
        </where>
        GROUP BY t1.id
        order by publish_time desc
    </select>

    <select id="selectDylanLiuliById" parameterType="Long" resultMap="DylanLiuliResult">
        <include refid="selectDylanLiuliInfoVo"/>
        where id = #{id}
    </select>
    <select id="getCommonList" parameterType="java.lang.String" resultType="java.util.Map">
        ${sql}
    </select>

    <insert id="insertDylanLiuli" parameterType="DylanLiuli">
        insert into dylan_liuli
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="liuliLink != null">liuli_link,</if>
            <if test="btLink != null">bt_link,</if>
            <if test="liuliTitle != null">liuli_title,</if>
            <if test="content != null">content,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="liuliLink != null">#{liuliLink},</if>
            <if test="btLink != null">#{btLink},</if>
            <if test="liuliTitle != null">#{liuliTitle},</if>
            <if test="content != null">#{content},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateDylanLiuli" parameterType="DylanLiuli">
        update dylan_liuli
        <trim prefix="SET" suffixOverrides=",">
            <if test="liuliLink != null">liuli_link = #{liuliLink},</if>
            <if test="btLink != null">bt_link = #{btLink},</if>
            <if test="liuliTitle != null">liuli_title = #{liuliTitle},</if>
            <if test="content != null">content = #{content},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDylanLiuliById" parameterType="Long">
        delete
        from dylan_liuli
        where id = #{id}
    </delete>

    <delete id="deleteDylanLiuliByIds" parameterType="String">
        delete from dylan_liuli where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>